{"version":3,"sources":["pages/LiveOrDead.js","App.js","reportWebVitals.js","index.js"],"names":["useState","live","setLive","timeInterval","setTimeInterval","timer","useRef","setTime","t","clearInterval","current","setInterval","l","id","onClick","className","App","style","width","height","window","innerHeight","LiveOrDead","interval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAEe,aACb,MAA0BA,oBAAS,GAAnC,mBAAQC,EAAR,KAAcC,EAAd,KACA,EAA0CF,mBAAS,KAAnD,mBAAQG,EAAR,KAAsBC,EAAtB,KAEIC,EAAQC,iBAAO,MAWbC,EAAU,SAACC,GACfC,cAAcJ,EAAMK,SACpBN,EAAgBI,GAChBH,EAAMK,QAAUC,aAAY,WAC1BT,GAAQ,SAAAU,GAAC,OAAKA,OACbJ,IASL,OAAO,sBAAKK,GAAI,OAAT,UACL,sBAAMC,QAAS,WAlBfL,cAAcJ,EAAMK,UAkBcK,UAAW,SAA7C,SAAyDd,EAAO,SAAM,WACtE,8EAAeE,EAAc,IAA7B,OACA,sBAAKY,UAAW,UAAhB,UACE,qBAAKD,QAAS,WAAOP,EAAQ,KAAMQ,UAAW,SAA9C,mBACA,qBAAKD,QAAS,WAAOP,EAAQ,MAAOQ,UAAW,SAA/C,kBACA,qBAAKD,QAAS,WAAOP,EAAQ,MAAOQ,UAAW,SAA/C,kBACA,qBAAKD,QAAS,WAAOP,EAAQ,MAAOQ,UAAW,SAA/C,kBACA,qBAAKD,QAAS,WAAOP,EAAQ,MAAOQ,UAAW,SAA/C,kBACA,qBAAKD,QAAS,WAAOP,EAAQ,MAAOQ,UAAW,SAA/C,kBACA,qBAAKD,QAAS,WAAOP,EAAQ,MAAOQ,UAAW,SAA/C,kBACA,qBAAKD,QAAS,WAAOP,EAAQ,MAAOQ,UAAW,SAA/C,kBACA,qBAAKD,QAAS,WAAOP,EAAQ,MAAOQ,UAAW,SAA/C,kBACA,qBAAKD,QAAS,WApChBT,EAAMK,QAAUC,aAAY,WAC1BT,GAAQ,SAAAU,GAAC,OAAKA,OACbT,IAkC8BY,UAAW,SAA1C,0BACA,qBAAKD,QAAS,WAnBhBL,cAAcJ,EAAMK,SACpBN,EAAgB,MAkBiBW,UAAW,SAA1C,iCCjCSC,MARf,WACE,OACE,qBAAKD,UAAU,MAAME,MAAO,CAAEC,MAAO,OAAQC,OAAQC,OAAOC,aAA5D,SACE,cAACC,EAAD,CAAYC,SAAU,SCKbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.9dd62003.chunk.js","sourcesContent":["import React, { useState, useRef  } from 'react';\r\n\r\nexport default function () {\r\n  const [ live, setLive ] = useState(true);\r\n  const [ timeInterval, setTimeInterval ] = useState(1000);\r\n\r\n  let timer = useRef(null);\r\n  const start = () => {\r\n    timer.current = setInterval(() => {\r\n      setLive(l => !l);\r\n    }, timeInterval)\r\n  };\r\n\r\n  const stop = () => {\r\n    clearInterval(timer.current);\r\n  };\r\n\r\n  const setTime = (t) => {\r\n    clearInterval(timer.current);\r\n    setTimeInterval(t);\r\n    timer.current = setInterval(() => {\r\n      setLive(l => !l);\r\n    }, t)\r\n  };\r\n\r\n  const reset = () => {\r\n    clearInterval(timer.current);\r\n    setTimeInterval(1000);\r\n  };\r\n\r\n\r\n  return <div id={\"game\"}>\r\n    <span onClick={() => { stop(); }} className={\"button\"}>{ live ? '生' : '死' }</span>\r\n    <span>当前时间间隔：{(timeInterval)/1000}s</span>\r\n    <div className={'actions'}>\r\n      <div onClick={() => {setTime(50)}} className={'action'}>0.05s</div>\r\n      <div onClick={() => {setTime(100)}} className={'action'}>0.1s</div>\r\n      <div onClick={() => {setTime(200)}} className={'action'}>0.2s</div>\r\n      <div onClick={() => {setTime(300)}} className={'action'}>0.3s</div>\r\n      <div onClick={() => {setTime(400)}} className={'action'}>0.4s</div>\r\n      <div onClick={() => {setTime(500)}} className={'action'}>0.5s</div>\r\n      <div onClick={() => {setTime(600)}} className={'action'}>0.6s</div>\r\n      <div onClick={() => {setTime(700)}} className={'action'}>0.7s</div>\r\n      <div onClick={() => {setTime(800)}} className={'action'}>0.8s</div>\r\n      <div onClick={() => {start()}} className={'action'}>开始</div>\r\n      <div onClick={() => {reset()}} className={'action'}>重置</div>\r\n    </div>\r\n  </div>\r\n}\r\n","import React from \"react\";\nimport './App.css';\nimport LiveOrDead from \"./pages/LiveOrDead\";\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ width: '100%', height: window.innerHeight }}>\n      <LiveOrDead interval={500} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}